name: Build and Pack

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    - name: Set outputs
      id: vars
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        echo "::set-output name=date_time::$(git log -1 --format="%at" | xargs -I{} date -d @{} '+%Y-%m-%d %H:%M:%S')"
        echo "::set-output name=date_time_filename::$(git log -1 --format="%at" | xargs -I{} date -d @{} '+%Y-%m-%d_%H-%M-%S')"

    - name: Set Versions
      run: echo "${{ steps.vars.outputs.date_time }}, ${{ github.ref_name }} (${{ steps.vars.outputs.sha_short }})" > "sd-card/html/version.txt"

    - name: Build Firmware
      run: mkdir -p ./code/.pio/build/esp32cam/; touch ./code/.pio/build/esp32cam/firmware.bin; touch firmware__${{ steps.vars.outputs.date_time_filename }}__${{ github.ref_name }}_\(${{ steps.vars.outputs.sha_short }}\).bin # Testing
#      run: cd code; platformio run --environment esp32cam; cp .pio/build/esp32cam/firmware.bin ../firmware__${{ steps.vars.outputs.date_time_filename }}__${{ github.ref_name }}_\(${{ steps.vars.outputs.sha_short }}\).bin

    - name: Upload Firmware artifact
      uses: actions/upload-artifact@v3
      with:
        name: firmware__${{ steps.vars.outputs.date_time_filename }}__${{ github.ref_name }}_(${{ steps.vars.outputs.sha_short }})
        path: firmware__${{ steps.vars.outputs.date_time_filename }}__${{ github.ref_name }}_\(${{ steps.vars.outputs.sha_short }}\).bin

    - name: Upload Web interface Artifact
      uses: actions/upload-artifact@v3
      with:
        name: html__${{ steps.vars.outputs.date_time_filename }}__${{ github.ref_name }}_(${{ steps.vars.outputs.sha_short }})
        path: ./sd-card/html

    - name: Prepare combined zip
      run: |
        mkdir dist
        cp ./code/.pio/build/esp32cam/firmware.bin dist/firmware.bin
        cp -r ./sd-card/html ./dist/

    - name: Upload combined zip artifact
      uses: actions/upload-artifact@v3
      with:
        name: update__${{ steps.vars.outputs.date_time_filename }}__${{ github.ref_name }}_(${{ steps.vars.outputs.sha_short }})
        path: ./dist/*
