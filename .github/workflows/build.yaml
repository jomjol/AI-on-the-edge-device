name: Build and Pack

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    - name: Build Firmware
      run: mkdir -p ./code/.pio/build/esp32cam/; touch ./code/.pio/build/esp32cam/firmware.bin # Testing
#      run: cd code; platformio run --environment esp32cam


  pack-for-OTA-v1:
    runs-on: ubuntu-latest
    
    steps:
    - name: Set Variables
      id: vars
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    # Old OTA concept
    # firmware__*.zip needs to be unpacked before attaching to the release!
    # The bin filename can contain versioning.
    - name: Rename firmware file to contain versioning (old ota)
      run: |
        mkdir -p ./dist_old_ota
        cp "./code/.pio/build/esp32cam/firmware.bin" "./dist_old_ota/firmware__${{ github.ref_name }}_(${{ steps.vars.outputs.sha_short }}).bin"
        ls -l ./dist_old_ota

    - name: Upload Firmware artifact (old OTA concept)
      uses: actions/upload-artifact@v3
      with:
        name: "firmware__${{ github.ref_name }}__(${{ steps.vars.outputs.sha_short }})__(extract_before_upload__only_needed_for_migration_from_11.3.1)"
        path: ./dist_old_ota/*

    - name: Upload Web interface artifact (old OTA concept)
      uses: actions/upload-artifact@v3
      with:
        name: "html__${{ github.ref_name }}__(${{ steps.vars.outputs.sha_short }})__(only_needed_for_migration_from_11.3.1)"
        path: ./sd-card/html/*



  pack-for-OTA-v2:
    runs-on: ubuntu-latest
    
    steps:
    - name: Set Variables
      id: vars
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        
    # New OTA concept
    # update__version.zip file with following content:
    #  - /firmware.bin
    #  - (optional) /html/*
    #  - (optional) /config/*.tfl        
    - name: Prepare update.zip artifact
      run: |
        mkdir -p ./dist
        cp "./code/.pio/build/esp32cam/firmware.bin" "dist/firmware.bin"

    - name: Upload update.zip Artifact (Firmware only)
      uses: actions/upload-artifact@v3
      with:
        name: "update_firmware_only__${{ github.ref_name }}_(${{ steps.vars.outputs.sha_short }})"
        path: ./dist/*
        

    - name: Prepare update.zip artifact (Firmware + Web UI)
      run: cp -r ./sd-card/html ./dist/

    - name: Upload update.zip artifact (Firmware + Web UI)
      uses: actions/upload-artifact@v3
      with:
        name: "update_firmware+web_ui__${{ github.ref_name }}_(${{ steps.vars.outputs.sha_short }})"
        path: ./dist/*
        

    - name: Prepare update.zip artifact (Firmware + Web UI + CNN)
      run: |
        mkdir ./dist/config/
        cp ./sd-card/config/*.tfl ./dist/config/ 2>/dev/null || true
        cp ./sd-card/config/*.tflite ./dist/config/ 2>/dev/null || true

    - name: Upload update.zip artifact (Firmware + Web UI + CNN)
      uses: actions/upload-artifact@v3
      with:
        name: "update_firmware+web_ui+cnn__${{ github.ref_name }}_(${{ steps.vars.outputs.sha_short }})"
        path: ./dist/*
